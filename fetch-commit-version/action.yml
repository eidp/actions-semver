name: 'Fetch commit Version'
description: >
  The fetch-commit-version component executes the [`commit_version`](../github_semver/commit_version.py) script which 
  downloads the version artifact from the last successful workflow run for the current commit.
  The corresponding version is stored as `COMMIT_VERSION` environment variable and set as output of this action.
  This pipeline is supposed to be run for releases only.
  
  The GitHub token needs to have `actions: read` permission to be able to access the workflow runs.
inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.13'
  github-token:
    description: 'GitHub token for API access'
    required: false
    default: ${{ github.token }}
  artifact-name:
    description: 'Name of the version artifact'
    required: false
    default: 'version'
  workflow-name:
    description: 'Name of the workflow to retrieve the version artifact from. Defaults to the current workflow.'
    required: false
    default: ${{ github.workflow }}
outputs:
  version:
    description: 'Retrieved semantic version for commit'
    value: ${{ steps.fetch-commit-version.outputs.version }}
runs:
  using: 'composite'
  steps:
  - name: Set up Python
    uses: actions/setup-python@v5.6.0
    with:
      python-version: ${{ inputs.python-version }}

  - name: Install UV
    uses: astral-sh/setup-uv@v4
    with:
      enable-cache: true

  - name: Install dependencies
    shell: bash
    working-directory: ${{ github.action_path }}/..
    run: |
      uv sync --frozen

  - name: Determine commit SHA
    id: commit-sha
    shell: bash
    run: |
      # Determine the correct commit SHA based on the event type
      if [[ "${{ github.event_name }}" == "pull_request" ]]; then
        COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
        echo "Using PR head SHA: $COMMIT_SHA"
      else
        COMMIT_SHA="${GITHUB_SHA}"
        echo "Using GITHUB_SHA: $COMMIT_SHA"
      fi
      echo "sha=$COMMIT_SHA" >> $GITHUB_OUTPUT

  - name: Fetch commit version
    id: fetch-commit-version
    shell: bash
    working-directory: ${{ github.action_path }}/..
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
    run: |
      COMMIT_VERSION=$(uv run python -m github_semver.commit_version --commit-sha "${{ steps.commit-sha.outputs.sha }}" --artifact-name "${{ inputs.artifact-name }}" --workflow-name "${{ inputs.workflow-name }}")
      echo "$COMMIT_VERSION" > version
      echo "version=$COMMIT_VERSION" >> $GITHUB_OUTPUT
      echo "COMMIT_VERSION=$COMMIT_VERSION" >> $GITHUB_ENV

  - name: 📋 Add to Job Summary
    shell: bash
    run: |
      # Get short SHA for display
      COMMIT_SHA="${{ steps.commit-sha.outputs.sha }}"
      SHORT_SHA="${COMMIT_SHA:0:8}"

      echo "## 🔍 Version Fetch Summary" >> $GITHUB_STEP_SUMMARY
      echo "" >> $GITHUB_STEP_SUMMARY
      echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
      echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
      echo "| 📦 **Version** | \`${{ env.COMMIT_VERSION }}\` |" >> $GITHUB_STEP_SUMMARY
      echo "| 🏷️ **Artifact** | \`${{ inputs.artifact-name }}\` |" >> $GITHUB_STEP_SUMMARY
      echo "| 🔄 **Workflow** | \`${{ inputs.workflow-name }}\` |" >> $GITHUB_STEP_SUMMARY
      echo "| 📍 **Commit** | \`$SHORT_SHA\` |" >> $GITHUB_STEP_SUMMARY
      echo "" >> $GITHUB_STEP_SUMMARY
      echo "> ✅ **Success!** Version retrieved from previous workflow run" >> $GITHUB_STEP_SUMMARY
