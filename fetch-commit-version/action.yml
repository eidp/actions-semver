name: 'Fetch commit Version'
description: |
  The fetch-commit-version component executes the [`commit_version`](../github_semver/commit_version.py) script which 
  downloads the version artifact from the last successful workflow run for the current commit.

  The corresponding version is stored as `COMMIT_VERSION` environment variable and set as output of this action.

  This pipeline is supposed to be run for releases only.

  This action requires a GitHub token with the following permissions:
  ```yaml
  permissions:
    contents: read
    actions: read
  ```

Author: EIDP

inputs:
  github-token:
    description: 'GitHub token for API access'
    required: false
    default: ${{ github.token }}
  artifact-name:
    description: 'Name of the version artifact'
    required: false
    default: 'version'
  workflow-name:
    description: 'Name of the workflow to retrieve the version artifact from. Defaults to the current workflow.'
    required: false
    default: ${{ github.workflow }}
outputs:
  version:
    description: 'Retrieved semantic version for commit'
    value: ${{ steps.fetch-commit-version.outputs.version }}
runs:
  using: 'composite'
  steps:
  - name: Set up Python
    uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
    with:
      python-version: '3.14'

  - name: Install UV
    uses: astral-sh/setup-uv@eb1897b8dc4b5d5bfe39a428a8f2304605e0983c # v7.0.0
    with:
      enable-cache: false # The UV lock file cannot be resolved when this action is included from another repository

  - name: Install dependencies
    shell: bash
    working-directory: ${{ github.action_path }}/..
    run: |
      uv sync --frozen

  - name: Get commit SHA
    id: commit-sha
    uses: eidp/actions-common/commit-sha@b1ae9db377e1e789ec4583ef3bf7a022ae4bfee4 # v1.1.1

  - name: Fetch commit version
    id: fetch-commit-version
    shell: bash
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
    run: |
      COMMIT_VERSION=$(uv run --project ${{ github.action_path }}/.. python -m github_semver.commit_version --commit-sha "${{ steps.commit-sha.outputs.sha }}" --artifact-name "${{ inputs.artifact-name }}" --workflow-name "${{ inputs.workflow-name }}")
      echo "$COMMIT_VERSION" > version
      echo "version=$COMMIT_VERSION" >> $GITHUB_OUTPUT
      echo "COMMIT_VERSION=$COMMIT_VERSION" >> $GITHUB_ENV

  - name: 📋 Add to Job Summary
    shell: bash
    run: |
      echo "## 🔍 Version Fetch Summary" >> $GITHUB_STEP_SUMMARY
      echo "" >> $GITHUB_STEP_SUMMARY
      echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
      echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
      echo "| 📦 **Version** | \`${{ env.COMMIT_VERSION }}\` |" >> $GITHUB_STEP_SUMMARY
      echo "| 📍 **Commit** | \`${{ steps.commit-sha.outputs.short-sha }}\` |" >> $GITHUB_STEP_SUMMARY
      echo "" >> $GITHUB_STEP_SUMMARY
      echo "> ✅ **Success!** Version retrieved from previous workflow run" >> $GITHUB_STEP_SUMMARY
