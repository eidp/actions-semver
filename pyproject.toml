[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "github-semver"
version = "1.0.0"
description = "GitHub Actions semantic versioning tool"
readme = "README.md"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]

requires-python = ">=3.13"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
github-semver = "github_semver.run_semver:main"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "build",
    "dist",
    "venv",
]

line-length = 88
indent-width = 4

# Assume Python version
target-version = "py313"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D",      # TODO: Fixme
    "COM812", # Ignore because we use formatter
    "G004",   # TODO: Fixme
    "T201",   # TODO: Fixme
    "RET504",
    "TRY003",
    "EM101",
    "EM102",
    "E501",   # We use formatter
    "S310",   # TODO: Fixme
    "ISC001", # We use formatter
    "S602", # Error with subprocess in run_semver.py, currently there is no solution.
    "S603", # Error with subprocess in run_semver.py, currently there is no solution.
    "S607", # Error with subprocess in run_semver.py, currently there is no solution.
]


# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN", "S101", "PT023", "D"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "ruff>=0.12.11",
]
